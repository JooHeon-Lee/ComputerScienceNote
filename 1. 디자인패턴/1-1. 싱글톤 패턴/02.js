/**
 * 
 * 의존성 주입
 * 
 * 의존성이란 종속성이라고도 함.
 * A -> B 에 의존성이 있는건 B가 변경되면 A도 같이 변경 되야함.
 * 
 * 
 * 
 * ***********************************************
 * 의존성 주입 전
 * 
 * 메인 모듈 -> 하위 모듈
 *          ㄴ> 하위 모듈
 * ************************************************
 * 의존성 주입 후
 * 
 * 의존성 주입자 -> 메인모듈
 *              ㄴ> 하위 모듈
 * *************************************************
 * 
 * => 의존성 주입자로 인해 메인 모듈이 간접적으로 의존성을 주입하는 방식.
 *    이를 통해 메인 모듈 은 하위 모듈에 대한 의존성이 떨어짐. 즉, 디커플링 된다.
 * 
 * 원칙
 *  1. 상위 모듈은 하위 모듈에서 어떠한 것도 가져오면 안됨.
 *  2. 둘 다 추상화에 의존해야 하며, 이때 추상화는 세부 사항에 의존하면 안된다 는 의존성 주입 원칙을 지켜야 함.
 * 
 * 장점
 *  1. 모듈을 쉽게 교체 할 수 있는 구조가 된다.
 *  2. 테스팅 하기 쉽다.
 *  3. 마이그레이션도 쉽다.
 *  4. 구현 시 추상화 레이어를 넣고 이를 기반으로 구현체를 넣어 주기 때문에 애플리케이션 의존성 방향이 일관됨.
 *  5. 애플리케이션을 쉽게 추론할 수 있다.
 *  6. 모듈 간의 관계가 더 명확해짐.
 * 
 * 단점
 *  1. 클래스 수가 늘어나서 복잡성이 증가되므로 런타임 패널티가 생기기도 함.
 * 
 */